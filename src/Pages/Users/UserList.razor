@page "/users"
@using StacjaIT.BlazorApp.Abstractions
@using StacjaIT.BlazorApp.Models
@inject IUserService Api
@inject IJSRuntime JS

<div class="container">


    <a href="/users/add" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>

    <a class="btn-floating btn-large waves-effect waves-light green" @onclick="Send"><i class="material-icons">send</i></a>


    @if (users is null)
    {
        <LoadingComponent />
    }
    else
    {
        <table class="striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Username</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>

       
        <tbody>

            @foreach (var user in users)
            {
                <tr @onclick="OnSelected">
                    <td>@user.Name</td>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td><a href=@($"/users/{user.Id}/posts") class="waves-effect waves-light btn">Posts</a> </td>
                </tr>
            }
        </tbody>
    </table>
    }

</div>


@code {
    private List<User>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await Api.GetAllAsync();
    }

    private async Task Send()
    {
        Console.WriteLine("Send");

        await JS.InvokeVoidAsync("M.toast", new { html = "Hello World!" });

    }

    private async Task OnSelected()
    {
        
    }

}
